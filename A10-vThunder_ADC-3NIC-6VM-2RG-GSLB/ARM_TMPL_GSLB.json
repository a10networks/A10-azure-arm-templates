{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "vthunderip",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "vthunder",
            "metadata": {
                "description": "Name of the VM"
            }
        },
        "linuxName": {
            "type": "string",
            "defaultValue": "linux",
            "metadata": {
                "description": "Name of the linux"
            }
        },
		"vThunderImage":{
			"type":"string",
			"defaultValue": "vthunder_520_byol", 
			"metadata": {
				"description":"Name of vthunder image"
			}
		},
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "16.04.0-LTS",
            "metadata": {
                "description": "The Ubuntu version for the VM"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A4_v2",
            "metadata": {
                "description": "Size of the VM"
            }
        },
        "vmSize_linux": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "Linux Virtual Machine Size"
            }
        },
        "region1":{
            "type":"string",
            "metadata": {
                "description":"Name of region1"
            }
        },
        "region2":{
            "type":"string",
            "metadata": {
                "description":"Name of region2"
            }
        },
        "networkSecurityGroupName_region1_Management1":{
            "type":"string",
            "metadata": {
                "description":"Name of NSG for management region1"
            }
        },
        "networkSecurityGroupName_region1_Data1":{
            "type":"string",
            "metadata": {
                "description":"Name of NSG for data port1 for region1"
            }
        },
        "networkSecurityGroupName_region1_Data2":{
            "type":"string",
            "metadata": {
                "description":"Name of NSG for data port2 for region1"
            }
        },
        "networkSecurityGroupName_region2_Management1":{
            "type":"string",
            "metadata": {
                "description":"Name of NSG for management region2"
            }
        },
        "networkSecurityGroupName_region2_Data1":{
            "type":"string",
            "metadata": {
                "description":"Name of NSG for data port1 for region2"
            }
        },
        "networkSecurityGroupName_region2_Data2":{
            "type":"string",
            "metadata": {
                "description":"Name of NSG for data port2 for region2"
            }
        },
        "imagePublisher_linux":{
            "type":"string",
            "metadata": {
                "description":"Linux publisher name, example-canonical, redhat"
            }
        },
        "imageOffer_linux":{
            "type":"string",
            "metadata": {
                "description":"Linux image, example-ubuntu, fedora"
            }
        },
        "imagePublisher_vthunder":{
            "type":"string",
            "metadata": {
                "description":"load balancer publisher name"
            }
        },
        "imageOffer_vthunder":{
            "type":"string",
            "metadata": {
                "description":"version of load balancer used"
            }
        },
        "storageAccountName1":{
            "type":"string",
            "metadata": {
                "description":"Name of storage account for region1"
            }
        },
        "storageAccountName2":{
            "type":"string",
            "metadata": {
                "description":"Name of storage account for region2"
            }
        },
        "addressPrefix1":{
            "type":"string",
            "metadata": {
                "description":"region1 Address prefix range"
            }
        },
        "region1_mgmt_prefix":{
            "type":"string",
            "metadata": {
                "description":"region1 mgmt Address prefix range"
            }
        },
        "region1_data1_prefix":{
            "type":"string",
            "metadata": {
                "description":"region1 data1 Address prefix range"
            }
        },
        "region1_data2_prefix":{
            "type":"string",
            "metadata": {
                "description":"region1 data2 Address prefix range"
            }
        },
        "addressPrefix2":{
            "type":"string",
            "metadata": {
                "description":"region2 Address prefix range"
            }
        },
        "region2_mgmt_prefix":{
            "type":"string",
            "metadata": {
                "description":"region2 mgmt Address prefix range"
            }
        },
        "region2_data1_prefix":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 Address prefix range"
            }
        },
        "region2_data2_prefix":{
            "type":"string",
            "metadata": {
                "description":"region2 data2 Address prefix range"
            }
        },
        "vnetName1_mgmt_region1_PrivateAddress1":{
            "type":"string",
            "metadata": {
                "description":"region1 management private ip1"
            }
        },
        "vnetName1_mgmt_region1_PrivateAddress2":{
            "type":"string",
            "metadata": {
                "description":"region1 management private ip2"
            }
        },
        "vnetName1_mgmt_region1_PrivateAddress3":{
            "type":"string",
            "metadata": {
                "description":"region1 management private ip3"
            }
        },
        "vnetName1_mgmt_region1_PrivateAddress4":{
            "type":"string",
            "metadata": {
                "description":"region1 management private ip4"
            }
        },
        "vnetName1_mgmt_region1_PrivateAddress5":{
            "type":"string",
            "metadata": {
                "description":"region1 management private ip5"
            }
        },
        "vnetName1_data1_region1_PrivateAddress1":{
            "type":"string",
            "metadata": {
                "description":"region1 data1 private ip1"
            }
        },
        "vnetName1_data1_region1_PrivateAddress2":{
            "type":"string",
            "metadata": {
                "description":"region1 data1 private ip2"
            }
        },
        "vnetName1_data1_region1_PrivateAddress3":{
            "type":"string",
            "metadata": {
                "description":"region1 data1 private ip3"
            }
        },
        "vnetName1_data1_region1_PrivateAddress_secondary1":{
            "type":"string",
            "metadata": {
            "description":"region1 data1 private ip secondary1"
            }
        },
        "vnetName1_data1_region1_PrivateAddress_secondary2":{
            "type":"string",
            "metadata": {
                "description":"region1 data1 private ip secondary2"
            }
        },
        "vnetName1_data1_region1_PrivateAddress_secondary3":{
            "type":"string",
            "metadata": {
                "description":"region1 data1 private ip secondary3"
            }
        },
        "vnetName1_data2_region1_PrivateAddress1":{
            "type":"string",
            "metadata": {
                "description":"region1 data2 private ip1"
            }
        },
        "vnetName1_data2_region1_PrivateAddress2":{
            "type":"string",
            "metadata": {
                "description":"region1 data2 private ip2"
            }
        },
        "vnetName1_data2_region1_PrivateAddress3":{
            "type":"string",
            "metadata": {
                "description":"region1 data2 private ip3"
            }
        },
        "vnetName1_data2_region1_PrivateAddress4":{
            "type":"string",
            "metadata": {
                "description":"region1 data2 private ip4"
            }
        },
        "vnetName1_data2_region1_PrivateAddress5":{
            "type":"string",
            "metadata": {
                "description":"region1 data2 private ip5"
            }
        },
        "vnetName2_mgmt_region2_PrivateAddress1":{
            "type":"string",
            "metadata": {
                "description":"region2 management private ip1"
            }
        },
        "vnetName2_mgmt_region2_PrivateAddress2":{
            "type":"string",
            "metadata": {
                "description":"region2 management private ip2"
            }
        },
        "vnetName2_mgmt_region2_PrivateAddress3":{
            "type":"string",
            "metadata": {
                "description":"region2 management private ip3"
            }
        },
        "vnetName2_mgmt_region2_PrivateAddress4":{
            "type":"string",
            "metadata": {
                "description":"region2 management private ip4"
            }
        },
        "vnetName2_mgmt_region2_PrivateAddress5":{
            "type":"string",
            "metadata": {
                "description":"region2 management private ip5"
            }
        },
        "vnetName2_data1_region2_PrivateAddress1":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 private ip1"
            }
        },
        "vnetName2_data1_region2_PrivateAddress2":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 private ip2"
            }
        },
        "vnetName2_data1_region2_PrivateAddress3":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 private ip3"
            }
        },
        "vnetName2_data1_region2_PrivateAddress_secondary1":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 private ip secondary1"
            }
        },
        "vnetName2_data1_region2_PrivateAddress_secondary2":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 private ip secondary2"
            }
        },
        "vnetName2_data1_region2_PrivateAddress_secondary3":{
            "type":"string",
            "metadata": {
                "description":"region2 data1 private ip secondary3"
            }
        },
        "vnetName2_data2_region2_PrivateAddress1":{
            "type":"string",
            "metadata": {
                "description":"region2 data2 private ip1"
            }
        },
        "vnetName2_data2_region2_PrivateAddress2":{
            "type":"string",
            "metadata": {
                "description":"region2 data2 private ip2"
            }
        },
        "vnetName2_data2_region2_PrivateAddress3":{
            "type":"string",
            "metadata": {
                "description":"region2 data2 private ip3"
            }
        },
        "vnetName2_data2_region2_PrivateAddress4":{
            "type":"string",
            "metadata": {
                "description":"region2 data2 private ip4"
            }
        },
        "vnetName2_data2_region2_PrivateAddress5":{
            "type":"string",
            "metadata": {
                "description":"region2 data2 private ip5"
            }
        }
    },

    "variables": {
        "apiVersion": "2015-06-15",
        "storageAccountType": "Standard_GRS",
        "nic1Name": "mgmt",
        "nic2Name": "data1",
		"nic3name": "data2",
        "vnetName1": "vnet1",
        "subnet1Name1": "mgmt_subnet_steps",
        "subnet1Id1":"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('region1'), variables('vnetName1')),  variables('subnet1Name1'))]",
        "subnet2Name1": "data1_subnet_steps",
        "subnet2Id1":"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('region1'), variables('vnetName1')),  variables('subnet2Name1'))]",
		"subnet3Name1": "data2_subnet_steps",
        "subnet3Id1":"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('region1'), variables('vnetName1')),  variables('subnet3Name1'))]",
        "vnetName2": "vnet2",
        "subnet1Name2": "mgmt_subnet_steps",
        "subnet1Id2":"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('region2'), variables('vnetName2')),  variables('subnet1Name2'))]",
        "subnet2Name2": "data1_subnet_steps",
        "subnet2Id2":"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('region2'), variables('vnetName2')),  variables('subnet2Name2'))]",
		"subnet3Name2": "data2_subnet_steps",
        "subnet3Id2":"[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('region2'), variables('vnetName2')),  variables('subnet3Name2'))]",
        "publicIPAddressName": "[concat(uniquestring(resourceGroup().id))]",
        "publicIPAddressType": "Dynamic"
    },

    "resources": [
        {
            //creating virtual networks for region1
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2015-06-15",
            "location": "[parameters('region1')]",
            "name": "[concat(parameters('region1'), variables('vnetName1'))]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix1')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name1')]",
                        "properties": {
                            "addressPrefix": "[parameters('region1_mgmt_prefix')]"

                        }
                    },
                    {
                        "name": "[variables('subnet2Name1')]",
                        "properties": {
                            "addressPrefix": "[parameters('region1_data1_prefix')]"

                        }
                    },
					 {
                        "name": "[variables('subnet3Name1')]",
                        "properties": {
                            "addressPrefix": "[parameters('region1_data2_prefix')]"
                        }
                    }
                ]
            }
        },
        {
            //creating virtual network for region2
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2015-06-15",
            "location": "[parameters('region2')]",
            "name": "[concat(parameters('region2'), variables('vnetName2'))]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix2')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet1Name2')]",
                        "properties": {
                            "addressPrefix": "[parameters('region2_mgmt_prefix')]"

                        }
                    },
                    {
                        "name": "[variables('subnet2Name2')]",
                        "properties": {
                            "addressPrefix": "[parameters('region2_data1_prefix')]"

                        }
                    },
					 {
                        "name": "[variables('subnet3Name2')]",
                        "properties": {
                            "addressPrefix": "[parameters('region2_data2_prefix')]"

                        }
                    }
                ]
            }
        },
        {
            //creating public ip addresses for instances in region1
            //used for mgmt and client side secondary data interfaces
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2015-06-15",
            "location": "[parameters('region1')]",
            "name": "[concat(variables('publicIPAddressName'), parameters('region1'), copyIndex(1))]",
            "copy": {
                "name": "PIPCopy1",
                "count": 8
            },
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsLabelPrefix'), copyIndex(1))]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            //creating public ip addresses for instances in region2
            //used for mgmt and client side secondary data interfaces
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2015-06-15",
            "location": "[parameters('region2')]",
            "name": "[concat(variables('publicIPAddressName'), parameters('region2'), copyIndex(1))]",
            "copy": {
                "name": "PIPCopy2",
                "count": 8
            },
            "properties": {
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('dnsLabelPrefix'), copyIndex(1))]"
                },
                "idleTimeoutInMinutes": 30,
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            //creating network interfaces for mgmt in region1
            //public and private ip addresses assigned to the interfaces
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('region1'), variables('vnetName1')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region1'), copyIndex(1)))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region1_Management1'))]"
            ],
            "location": "[parameters('region1')]",
            "name": "[concat(variables('nic1Name'),parameters('region1') ,copyIndex(1))]",
            "copy": {
                "name": "MGMTcopy1",
                "count": 5
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName1_mgmt_region1_PrivateAddress', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            "PublicIpAddress": {
                                "Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region1'), copyIndex(1)))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Id1')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region1_Management1'))]"
                }
            }
        },
        {
            //creating network interfaces for client side data interface in region1
            //these interfaces will have a primary private ip address
            //in addition there is also a secondary private ip address assigned to them primarily used as VIP ip address
            //the secondary ip will also have a public ip address which will be used as part of gslb config on controller
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('region1'), variables('vnetName1')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region1'), copyIndex(1)))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region1_Data1'))]"
            ],
            "location": "[parameters('region1')]",
            "name": "[concat(variables('nic2Name'),parameters('region1') ,copyIndex(1))]",
            "copy": {
                "name": "data1copy1",
                "count": 3
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "primary_ipconfig2",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName1_data1_region1_PrivateAddress', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id1')]"
                            },
                            "primary": true
                        }
                    },
                    {
                        "name": "secondary_ipconfig2",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName1_data1_region1_PrivateAddress_secondary', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            "PublicIpAddress": {
                                "Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region1'), copyIndex(6)))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet2Id1')]"
                            },
                            "primary": false
                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region1_Data1'))]"
                }
            }
        },
        {
            //creating network interfaces for server side data interface in region1
            //these interfaces will have a primary private ip address only
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('region1'), variables('vnetName1')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region1'), copyIndex(1)))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region1_Data2'))]"
            ],
            "location": "[parameters('region1')]",
            "name": "[concat(variables('nic3Name'),parameters('region1') ,copyIndex(1))]",
            "copy": {
                "name": "data2copy1",
                "count": 5
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName1_data2_region1_PrivateAddress', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            
                            "subnet": {
                                "id": "[variables('subnet3Id1')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region1_Data2'))]"
                }
            }
        },
        {
            //creating network interfaces for mgmt in region2
            //public and private ip addresses assigned to the interfaces
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('region2'), variables('vnetName2')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region2'), copyIndex(1)))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region2_Management1'))]"
            ],
            "location": "[parameters('region2')]",
            "name": "[concat(variables('nic1Name'),parameters('region2') ,copyIndex(1))]",
            "copy": {
                "name": "MGMTcopy2",
                "count": 5
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig21",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName2_mgmt_region2_PrivateAddress', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            "PublicIpAddress": {
                                "Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region2'), copyIndex(1)))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet1Id2')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region2_Management1'))]"
                }
            }
        },
        {
            //creating network interfaces for client side data interface in region2
            //these interfaces will have a primary private ip address
            //in addition there is also a secondary private ip address assigned to them primarily used as VIP ip address
            //the secondary ip will also have a public ip address which will be used as part of gslb config on controller
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "dependsOn": [

                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('region2'), variables('vnetName2')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region2'), copyIndex(1)))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region2_Data1'))]"
            ],
            "location": "[parameters('region2')]",
            "name": "[concat(variables('nic2Name'),parameters('region2') ,copyIndex(1))]",
            "copy": {
                "name": "data1copy2",
                "count": 3
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "primary_ipconfig22",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName2_data1_region2_PrivateAddress', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id2')]"
                            },
                            "primary": true
                        }
                    },
                    {
                        "name": "secondary_ipconfig22",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName2_data1_region2_PrivateAddress_secondary', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            "PublicIpAddress": {
                                "Id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region2'), copyIndex(6)))]"
                            },
                            "subnet": {
                                "id": "[variables('subnet2Id2')]"
                            },
                            "primary": false

                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region2_Data1'))]"
                }
            }
        },
        {
            //creating network interfaces for server side data interface in region2
            //these interfaces will have a primary private ip address only
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2015-06-15",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('region2'), variables('vnetName2')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('publicIPAddressName'), parameters('region2'), copyIndex(1)))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region2_Data2'))]"
            ],
            "location": "[parameters('region2')]",
            "name": "[concat(variables('nic3Name'),parameters('region2') ,copyIndex(1))]",
            "copy": {
                "name": "data2copy2",
                "count": 5
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig32",
                        "properties": {
                            "privateIPAddress": "[parameters(concat('vnetName2_data2_region2_PrivateAddress', string(copyIndex(1))))]",
                            "privateIPAllocationMethod": "Static",
                            
                            "subnet": {
                                "id": "[variables('subnet3Id2')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName_region2_Data2'))]"
                }
            }
        },
        {
            //NSG for MGMT in region1
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[parameters('networkSecurityGroupName_region1_Management1')]",
            "location": "[parameters('region1')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Port_22",
                        "properties": {
                            "description": "ssh-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "0.0.0.0/0",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "ntp",
                        "properties": {
                            "description": "ntp-rule",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "123",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1050,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "description": "https-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "http-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "gslb",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4149",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            //NSG for client side data interface in region1
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[parameters('networkSecurityGroupName_region1_Data1')]",
            "location": "[parameters('region1')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "https",
                        "properties": {
                            "description": "https-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "http-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "gslb",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4149",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "dns",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1040,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
    	},
        {
            //NSG for server side data interface region1
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[parameters('networkSecurityGroupName_region1_Data2')]",
            "location": "[parameters('region1')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            //NSG for MGMT in region2
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[parameters('networkSecurityGroupName_region2_Management1')]",
            "location": "[parameters('region2')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Port_22",
                        "properties": {
                            "description": "ssh-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "0.0.0.0/0",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "ntp",
                        "properties": {
                            "description": "ntp-rule",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "123",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1050,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "description": "https-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "http-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "gslb",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4149",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
    	},
        {
            //NSG for client side data interface in region2
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[parameters('networkSecurityGroupName_region2_Data1')]",
            "location": "[parameters('region2')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "https",
                        "properties": {
                            "description": "https-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "http",
                        "properties": {
                            "description": "http-rule",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "gslb",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4149",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "dns",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1040,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
    	},
        {
            //NSG for server side data interface region2
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2015-06-15",
            "name": "[parameters('networkSecurityGroupName_region2_Data2')]",
            "location": "[parameters('region2')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            //storage account for region1
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('region1')]",
            "name": "[parameters('storageAccountName1')]",
			"kind":"Storage",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            //storage account for region2
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2015-06-15",
            "location": "[parameters('region2')]",
            "name": "[parameters('storageAccountName2')]",
			"kind":"Storage",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            //creating 3 vthunder instances in region1
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('region1')]",
            "name": "[concat(parameters('vmName'),parameters('region1') ,copyIndex(1))]",
            "copy": {
                "name": "vmcopy1",
                "count": 3,
                "mode": "Serial",
                "batchSize": 1
            },
			"plan": {
                "name": "[parameters('vThunderImage')]",
                "product": "[parameters('imageOffer_vthunder')]",
                "publisher": "[parameters('imagePublisher_vthunder')]"
            },
			"scale": null,
            "properties": {
				"hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
				"storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher_vthunder')]",
                        "offer": "[parameters('imageOffer_vthunder')]",
                        "sku": "[parameters('vThunderImage')]",
                        "version": "latest"
                   },
					"osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('vmName'),parameters('region1'),'_OsDisk', copyIndex(1))]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30
                    },
					"dataDisks": []
				},
				 "osProfile": {
                   "computerName": "[concat(parameters('vmName'),parameters('region1') ,copyIndex(1))]",
                   "adminUsername": "[parameters('adminUsername')]",
                   "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
				   "adminPassword": "[parameters('adminPassword')]",
				   "secrets": []
                 },
				 "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic1Name'),parameters('region1') ,copyIndex(1)))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic2Name'),parameters('region1') ,copyIndex(1)))]",
                            "properties": {
                                "primary": false
                            }
                        },
						{
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic3Name'),parameters('region1') ,copyIndex(1)))]",
                            "properties": {
                                "primary": false
                            }
						}
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://', parameters('storageAccountName1'), '.blob.core.windows.net')]"
                    }
                }    
      		},
			"dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName1'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic1Name'),parameters('region1') ,copyIndex(1)))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic2Name'),parameters('region1') ,copyIndex(1)))]",
				"[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic3Name'),parameters('region1') ,copyIndex(1)))]"
            ]
        },
        {
            //creating 3 vthunder instances in region2
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('region2')]",
            "name": "[concat(parameters('vmName'),parameters('region2') ,copyIndex(1))]",
            "copy": {
                "name": "vmcopy1",
                "count": 3,
                "mode": "Serial",
                "batchSize": 1
            },
			"plan": {
                "name": "[parameters('vThunderImage')]",
                "product": "[parameters('imageOffer_vthunder')]",
                "publisher": "[parameters('imagePublisher_vthunder')]"
            },
			"scale": null,
            "properties": {
				"hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
				"storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher_vthunder')]",
                        "offer": "[parameters('imageOffer_vthunder')]",
                        "sku": "[parameters('vThunderImage')]",
                        "version": "latest"
                   },
					"osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('vmName'),parameters('region2'),'_OsDisk', copyIndex(1))]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30
                    },
					"dataDisks": []
				},
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'),parameters('region2') ,copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false
                    },
                    "adminPassword": "[parameters('adminPassword')]",
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic1Name'),parameters('region2') ,copyIndex(1)))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic2Name'),parameters('region2') ,copyIndex(1)))]",
                            "properties": {
                                "primary": false
                            }
                        },
						 {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic3Name'),parameters('region2') ,copyIndex(1)))]",
                            "properties": {
                                "primary": false
                            }
						 }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                       "enabled": true,
                        "storageUri": "[concat('http://', parameters('storageAccountName2'), '.blob.core.windows.net')]"
                    }
                }    
      		},
			"dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName2'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic1Name'),parameters('region2') ,copyIndex(1)))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic2Name'),parameters('region2') ,copyIndex(1)))]",
				"[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic3Name'),parameters('region2') ,copyIndex(1)))]"
            ]
        },
        {
            //creating 2  ubuntu instances in region1
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('linuxName'),parameters('region1') ,copyIndex(1))]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('region1')]",
            "copy": {
                "name": "LinuxCopy1",
                "count": 2,
                "mode": "Serial",
                "batchSize": 1
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize_linux')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher_linux')]",
                        "offer": "[parameters('imageOffer_linux')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('linuxName'),parameters('region1'),'_OsDisk', copyIndex(1))]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite",
                        "diskSizeGB": 30
                    }
                },
                "osProfile": {
                    "computerName": "[concat(parameters('linuxName'),parameters('region1') ,copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic1Name'),parameters('region1') ,copyIndex(4)))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic3Name'),parameters('region1') ,copyIndex(4)))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://', parameters('storageAccountName1'), '.blob.core.windows.net')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName1'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic1Name'),parameters('region1') ,copyIndex(4)))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic3Name'),parameters('region1') ,copyIndex(4)))]"
            ]
        },
        {
            //creating 2  ubuntu instances in region2
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('linuxName'),parameters('region2') ,copyIndex(1))]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('region2')]",
            "copy": {
                "name": "LinuxCopy2",
                "count": 2,
                "mode": "Serial",
                "batchSize": 1
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize_linux')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher_linux')]",
                        "offer": "[parameters('imageOffer_linux')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('linuxName'),parameters('region2'),'_OsDisk', copyIndex(1))]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite",
                        "diskSizeGB": 30
                    }
                },
                "osProfile": {
                    "computerName": "[concat(parameters('linuxName'),parameters('region2') ,copyIndex(1))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "secrets": [],
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic1Name'),parameters('region2') ,copyIndex(4)))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic3Name'),parameters('region2') ,copyIndex(4)))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://', parameters('storageAccountName2'), '.blob.core.windows.net')]"
                    }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName2'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic1Name'),parameters('region2') ,copyIndex(4)))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('nic3Name'),parameters('region2') ,copyIndex(4)))]"
            ]
        }
    ]
}

