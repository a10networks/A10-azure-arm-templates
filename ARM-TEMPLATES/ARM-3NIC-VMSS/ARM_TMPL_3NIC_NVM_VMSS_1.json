{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "dnsLabelPrefix1":{
         "type":"string",
         "metadata":{
            "description":"Dns label prefix 1 name"
         }
      },
      "dnsLabelPrefix":{
         "type":"string",
         "metadata":{
            "description":"Dns label prefix name"
         }
      },
      "vmName":{
         "type":"string",
         "metadata":{
            "description":"vm name"
         }
      },
      "logAgentContainerName":{
         "type":"string",
         "metadata":{
            "description":"Log Agent Container Name"
         }
      },
      "mgmtIntfPrivatePrefix":{
         "type":"string",
         "metadata":{
            "description":"mgmt interface prefix"
         }
      },
      "eth1PrivatePrefix":{
         "type":"string",
         "metadata":{
            "description":"ethernet1 interface prefix"
         }
      },
      "eth2PrivatePrefix":{
         "type":"string",
         "metadata":{
            "description":"ethernet2 interface prefix"
         }
      },
      "nic1Name":{
         "type":"string",
         "metadata":{
            "description":"network interface 1 name"
         }
      },
      "nic2Name":{
         "type":"string",
         "metadata":{
            "description":"network interface 2 name"
         }
      },
      "nic3Name":{
         "type":"string",
         "metadata":{
            "description":"network interface 3 name"
         }
      },
      "vThunderImage":{
         "type":"string",
         "metadata":{
            "description":"vThunder Image version"
         }
      },
      "publisherName":{
         "type":"string",
         "metadata":{
            "description":"image publisher name"
         }
      },
      "productName":{
         "type":"string",
         "metadata":{
            "description":"product name"
         }
      },
      "nic1PublicIPName":{
         "type":"string",
         "metadata":{
            "description":"public ip address 1 name"
         }
      },
      "networkSecurityGroupName":{
         "type":"string",
         "metadata":{
            "description":"network security group name"
         }
      },
      "vmSku":{
         "type":"string",
         "defaultValue":"Standard_Ds2_v2",
         "metadata":{
            "description":"Size of VMs in the VM Scale Set."
         }
      },
      "vmssSku":{
         "type":"string",
         "defaultValue":"Standard_Ds2_v2",
         "metadata":{
            "description":"Size of VMs in the VM Scale Set."
         }
      },
      "vmssName":{
         "type":"string",
         "minLength":3,
         "maxLength":61,
         "metadata":{
            "description":"String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "instanceCount":{
         "type":"int",
         "defaultValue":3,
         "minValue":1,
         "maxValue":100,
         "metadata":{
            "description":"Number of VM instances (100 or less)."
         }
      },
      "singlePlacementGroup":{
         "type":"bool",
         "defaultValue":true,
         "metadata":{
            "description":"When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true."
         }
      },
      "adminUsername":{
         "type":"string",
         "defaultValue":"vmssadmin",
         "metadata":{
            "description":"Admin username on all VMs."
         }
      },
      "adminPassword":{
         "type":"securestring",
         "metadata":{
            "description":"Admin password on all VMs."
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"Location for all resources."
         }
      },
      "platformFaultDomainCount":{
         "type":"int",
         "defaultValue":1,
         "metadata":{
            "description":"Fault Domain count for each placement group."
         }
      },
      "storageAccountName": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "storageAccountType": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "sslContainerName": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "lbPublicIPName": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "lbName": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "lbBackEndPoolName": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "lbFrontEndName": {
         "type": "string",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      },
      "automationAccountName": {
       "type": "string",
       "minLength": 3,
       "maxLength": 61,
       "metadata": {
            "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
     },
      "artifactsLocation": {
         "type": "string",
         "metadata": {
            "description": "String used as a base for naming resources. Must be 0-265 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
         }
      }
   },
   "variables":{
      "namingInfix":"[toLower(parameters('vmssName'))]",
      "longNamingInfix":"[toLower(parameters('vmssName'))]",
      "addressPrefix":"10.0.0.0/16",
      "subnet1Prefix":"[parameters('mgmtIntfPrivatePrefix')]",
      "subnet2Prefix":"[parameters('eth1PrivatePrefix')]",
      "subnet3Prefix":"[parameters('eth2PrivatePrefix')]",
      "virtualNetworkName":"vth-vnet",
      "nic1PublicIPName":"[parameters('nic1PublicIPName')]",
      "subnet1Name":"[concat(variables('virtualNetworkName'), '-mgmt-sub1')]",
      "subnet2Name":"[concat(variables('virtualNetworkName'), '-data-sub2')]",
      "subnet3Name":"[concat(variables('virtualNetworkName'), '-data-sub3')]",
      "nic1Name":"[parameters('nic1Name')]",
      "nic2Name":"[parameters('nic2Name')]",
      "nic3Name":"[parameters('nic3Name')]",
      "ipConfig1Name":"[concat(variables('nic1Name'), '-ip')]",
      "ipConfig2Name":"[concat(variables('nic2Name'), '-ip')]",
      "ipConfig3Name":"[concat(variables('nic3Name'), '-ip')]",
      "domain1Name":"[parameters('dnsLabelPrefix1')]",
      "networkSecurityGroupName":"[parameters('networkSecurityGroupName')]",
      "storageAccountType": "[parameters('storageAccountType')]",
      "storageAccountName": "[toLower(parameters('storageAccountName'))]",
      "lbPublicIPName": "[parameters('lbPublicIPName')]",
      "lbName": "[parameters('lbName')]",
      "lbPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName'))]",
      "lbFrontendIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbName'), parameters('lbFrontEndName'))]",
      "lbBackendPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbName'), parameters('lbBackEndPoolName'))]",
      "lbHealthProbe80Name": "HealthProbe80",
      "lbHealthProbe80ID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbHealthProbe80Name'))]",
      "lbHealthProbe443Name": "HealthProbe443",
      "lbHealthProbe443ID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbHealthProbe443Name'))]",
      "lbHealthProbe53Name": "HealthProbe53",
      "lbHealthProbe53ID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbHealthProbe53Name'))]",
      "agentPubIPName":"vth-agent-nic-ip",
      "agentNIName":"vth-agent-nic",
      "workspaceName":"vth-vmss-log-workspace",
      "workspaceSku":"pergb2018",
      "appInsightsName":"vth-vmss-app-insights",
      "_artifactsLocation":"[parameters('artifactsLocation')]",
      "_artifactsLocationSasToken": "",
      "PSMasterRunbookDescription": "Runbook to run all runbook",
      "PSSLBConfigRunbookDescription": "Runbook to apply slb config for all vThunder",
      "PSSSLConfigRunbookDescription": "Runbook to apply ssl certificate for all vThunder",
      "PSEventConfigRunbookDescription": "Runbook to apply event config for all vThunder",
      "PSGLMConfigRunbookDescription": "Runbook to glm config for all vThunder",
      "PSGLMRevokeConfigRunbookDescription": "Runbook to revoke glm for deleted vThunder",
      "PSChangePasswordConfigRunbookDescription": "Runbook to change password for all vThunder"
   },
   "resources":[
      {
         "apiVersion": "2017-03-15-preview",
         "name": "[variables('workspaceName')]",
         "location": "[parameters('location')]",
         "type": "Microsoft.OperationalInsights/workspaces",
         "properties": {
             "sku": {
                 "name": "[variables('workspaceSku')]"
             }
         }
      },
      {
            "name": "[variables('appInsightsName')]",
            "type": "microsoft.insights/components",
            "location": "[parameters('location')]",
            "apiVersion": "2020-02-02-preview",
            "dependsOn": [
               "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
            ],
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
            }
      },
      {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "name": "[variables('lbPublicIPName')]",
            "location": "[parameters('location')]",
            "sku": {
               "name": "Standard",
               "tier": "Regional"
            },
            "zones": ["1"],
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
      {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-06-01",
            "name": "[variables('lbName')]",
            "location": "[parameters('location')]",
            "sku": {
               "name": "Standard",
               "tier": "Regional"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[parameters('lbFrontEndName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('lbPublicIPAddressID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('lbBackEndPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "rulePort80",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBackendPoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHealthProbe80ID')]"
                            }
                        }
                    },
                   {
                        "name": "rulePort443",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBackendPoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHealthProbe443ID')]"
                            }
                        }
                    },
                   {
                        "name": "rulePort53",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBackendPoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 53,
                            "backendPort": 53,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHealthProbe53ID')]"
                            }
                        }
                    }
                ],
                "probes": [
                   {
                      "name": "[variables('lbHealthProbe80Name')]",
                      "properties": {
                         "protocol": "Tcp",
                         "port": 80,
                         "intervalInSeconds": 5,
                         "numberOfProbes": 2
                      }
                   },
                   {
                      "name": "[variables('lbHealthProbe443Name')]",
                      "properties": {
                         "protocol": "Tcp",
                         "port": 443,
                         "intervalInSeconds": 5,
                         "numberOfProbes": 2
                      }
                   },
                   {
                      "name": "[variables('lbHealthProbe53Name')]",
                      "properties": {
                         "protocol": "Tcp",
                         "port": 53,
                         "intervalInSeconds": 5,
                         "numberOfProbes": 2
                      }
                   }
                ]
            }
        },
      {
         "type":"Microsoft.Network/networkSecurityGroups",
         "apiVersion":"2015-06-15",
         "name":"[variables('networkSecurityGroupName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"ssh",
                  "properties":{
                     "description":"ssh-rule",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"0.0.0.0/0",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1000,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"https",
                  "properties":{
                     "description":"https-rule",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"443",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1010,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"http",
                  "properties":{
                     "description":"http-rule",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"80",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1020,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"snmp",
                  "properties":{
                     "description":"snmp-rule",
                     "protocol":"Udp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"161",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1030,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"ping",
                  "properties":{
                     "description":"ping-rule",
                     "protocol":"Icmp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1040,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"ntp",
                  "properties":{
                     "description":"ntp-rule",
                     "protocol":"Udp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"123",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1050,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/virtualNetworks",
         "apiVersion":"2020-06-01",
         "name":"[variables('virtualNetworkName')]",
         "location":"[parameters('location')]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('addressPrefix')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('subnet1Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet1Prefix')]"
                  }
               },
               {
                  "name":"[variables('subnet2Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet2Prefix')]"
                  }
               },
               {
                  "name":"[variables('subnet3Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet3Prefix')]"
                  }
               }
            ]
         },
         "dependsOn":[
            "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachineScaleSets",
         "apiVersion":"2020-06-01",
         "name":"[variables('namingInfix')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"[parameters('vmssSku')]",
            "tier":"Standard",
            "capacity":"[parameters('instanceCount')]"
         },
         "plan":{
            "name":"[parameters('vThunderImage')]",
            "product":"[parameters('productName')]",
            "publisher":"[parameters('publisherName')]"
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
         ],
         "properties":{
            "overprovision":false,
            "upgradePolicy":{
               "mode":"Automatic"
            },
            "singlePlacementGroup":"[parameters('singlePlacementGroup')]",
            "platformFaultDomainCount":"[parameters('platformFaultDomainCount')]",
            "virtualMachineProfile":{
               "storageProfile":{
                  "osDisk":{
                     "osType":"Linux",
                     "createOption":"FromImage",
                     "caching":"ReadWrite",
                     "managedDisk":{
                        "storageAccountType":"Standard_LRS"
                     },
                     "diskSizeGB":30
                  },
                  "imageReference":{
                     "publisher":"[parameters('publisherName')]",
                     "offer":"[parameters('productName')]",
                     "sku":"[parameters('vThunderImage')]",
                     "version":"latest"
                  }
               },
               "osProfile":{
                  "computerNamePrefix":"[variables('namingInfix')]",
                  "adminUsername":"[parameters('adminUsername')]",
                  "adminPassword":"[parameters('adminPassword')]"
               },
               "networkProfile":{
                  "networkInterfaceConfigurations":[
                     {
                        "name":"[variables('nic1Name')]",
                        "properties":{
                           "primary":true,
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfig1Name')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]"
                                    },
                                    "publicipaddressconfiguration":{
                                       "name":"[variables('nic1PublicIPName')]",
                                       "properties":{
                                          "dnsSettings":{
                                             "domainNameLabel":"[variables('domain1Name')]"
                                          },
                                          "idleTimeoutInMinutes":15
                                       }
                                    }
                                 }
                              }
                           ],
                           "networkSecurityGroup":{
                              "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                           }
                        }
                     },
                     {
                        "name":"[variables('nic2Name')]",
                        "properties":{
                           "primary":false,
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfig2Name')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]"
                                    },
                                    "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbBackendPoolID')]"
                                                    }
                                                ]
                                 }
                              }
                           ],
                           "networkSecurityGroup":{
                              "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                           }
                        }
                     },
                     {
                        "name":"[variables('nic3Name')]",
                        "properties":{
                           "primary":false,
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfig3Name')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet3Name'))]"
                                    }
                                 }
                              }
                           ],
                           "networkSecurityGroup":{
                              "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                           }
                        }
                     }
                  ]
               }
            }
         }
      },
      {
         "type": "Microsoft.Storage/storageAccounts",
         "apiVersion": "2019-04-01",
         "name": "[variables('storageAccountName')]",
         "location": "[resourceGroup().location]",
         "sku": {
           "name": "[parameters('storageAccountType')]"
         },
         "kind": "StorageV2",
         "properties": {}
      },
      {
      "name": "[concat(parameters('storageAccountName'),'/default/', parameters('sslContainerName'))]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-07-01",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
         ]
      },
      {
         "name": "[concat(parameters('storageAccountName'),'/default/', parameters('logAgentContainerName'))]",
         "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
         "apiVersion": "2018-07-01",
         "properties": {
           "publicAccess": "None"
         },
         "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
         ]
      },
      {
         "type": "Microsoft.Network/publicIPAddresses",
         "apiVersion": "2015-06-15",
         "location": "[resourceGroup().location]",
         "name": "[variables('agentPubIPName')]",
         "properties": {
             "dnsSettings": {
                 "domainNameLabel": "[parameters('dnsLabelPrefix')]"
             },
             "idleTimeoutInMinutes": 30,
             "publicIPAllocationMethod": "Dynamic"
         }
      },
      {
         "type": "Microsoft.Network/networkInterfaces",
         "apiVersion": "2015-06-15",
         "dependsOn": [
             "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
             "[resourceId('Microsoft.Network/publicIPAddresses', variables('agentPubIPName'))]"
         ],
         "location": "[resourceGroup().location]",
         "name": "[variables('agentNIName')]",
         "properties": {
             "ipConfigurations": [
                 {
                     "name": "ipconfig1",
                     "properties": {
                         "PublicIpAddress": {
                             "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('agentPubIPName'))]"
                         },
                         "subnet": {
                             "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]"
                         }
                     }
                 }
             ],
             "networkSecurityGroup": {
                 "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
             }
         }
      },
      {
         "type": "Microsoft.Compute/virtualMachines",
         "apiVersion": "2016-04-30-preview",
         "location": "[resourceGroup().location]",
         "name": "[parameters('vmName')]",
         "properties": {
             "hardwareProfile": {
                 "vmSize": "[parameters('vmSku')]"
             },
             "storageProfile": {
                 "imageReference": {
                     "publisher": "canonical",
                     "offer": "0001-com-ubuntu-server-focal",
                     "sku": "20_04-lts-gen2",
                     "version": "latest"
                 },
                 "osDisk": {
                     "createOption": "fromImage",
                     "managedDisk": {
                         "storageAccountType": null
                     }
                 }
             },
             "osProfile": {
                 "computerName": "[parameters('vmName')]",
                 "adminUsername": "[parameters('adminUsername')]",
                 "linuxConfiguration": {
                     "disablePasswordAuthentication": false
                 },
                 "adminPassword": "[parameters('adminPassword')]",
                 "secrets": []
             },
             "networkProfile": {
                 "networkInterfaces": [
                     {
                         "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('agentNIName'))]",
                         "properties": {
                             "primary": true
                         }
                     }
                 ]
             },
             "diagnosticsProfile": {
                 "bootDiagnostics": {
                     "enabled": true,
                     "storageUri": "[concat('http://', variables('storageAccountName'), '.blob.core.windows.net')]"
                 }
             }
         },
         "dependsOn": [
             "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
             "[resourceId('Microsoft.Network/networkInterfaces', variables('agentNIName'))]"
         ]
      },
      {
       "type": "Microsoft.Automation/automationAccounts",
       "apiVersion": "2020-01-13-preview",
       "name": "[parameters('automationAccountName')]",
       "location": "[parameters('location')]",
       "dependsOn": [
         "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
       ],
       "identity": {
         "type": "SystemAssigned"
       },
       "properties": {
         "sku": {
           "name": "Basic"
         }
       },
       "resources": [
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "Master-Runbook",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSMasterRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_MASTER_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "SLB-Config",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSSLBConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_SLB_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "SSL-Config",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSSSLConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_SSL_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "Event-Config",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSEventConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_ACOS_EVENT_CONFIG_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "GLM-Config",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSGLMConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_GLM_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "GLM-Revoke-Config",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSGLMRevokeConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_GLM_REVOKE_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "Change-Password-Config",
           "location": "[parameters('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSChangePasswordConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_CHANGE_PASSWORD_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         }
       ]
     }
   ]
}