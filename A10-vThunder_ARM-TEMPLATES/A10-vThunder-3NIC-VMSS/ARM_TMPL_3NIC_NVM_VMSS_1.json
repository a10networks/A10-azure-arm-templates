{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "VMSS Name":{
         "type":"string",
         "minLength":3,
         "maxLength":61,
         "defaultValue":"vth-vmss",
         "metadata":{
            "description":"Choose a name for the Virtual Machine Scale Set (VMSS). The ARM template will create a new VMSS with the provided name. For eg vth-vmss, Users can login with the default vThunder provided user and password. The VMSS will automatically scale out or in based on the specified capacity rules, allowing you to manage a group of identical virtual machines efficiently. For more information on VMSS, refer to the Azure documentation: https://docs.microsoft.com/azure/virtual-machine-scale-sets/, For more information please refer to Thunder documentaions https://documentation.a10networks.com -> Infrastructure as Code (IAC) -> ARM Powershell"
         }
      },
      "VMSS Size":{
         "type":"string",
         "defaultValue":"Standard_D8s_v3",
         "metadata":{
            "description":"Choose from available instance/compute type supported for vThunder. The default instance type is Standard_D8s_v3 which contains 8 vCPU and 32 GiB memory. vThunder requires a minimum of 4 vCPU and 32 GiB memory, For more information about different instance types please refer to https://azure.microsoft.com/en-in/pricing/details/virtual-machines/series/"
         }
      },
      "Image":{
         "type":"string",
         "defaultValue": "a10-vthunder-adc-601-byol",
         "metadata":{
            "description":"Choose the A10 vThunder image that is right for you and your customers. A10 Thunder ADC for Advanced Load Balancing - BYOL is set as a default Image ID. Find more types of thunder images available with different capacities. Go to Azure Portal -> Marketplace -> Search for 'vThunder' -> Select Image -> Usage Information + Support -> Plan ID is the image ID. For more Thunder documentation, please refer to https://documentation.a10networks.com -> Infrastructure as Code (IAC) -> ARM Powershell"
         }
      },
      "Publisher":{
         "type":"string",
         "defaultValue": "a10networks",
         "metadata":{
            "description":"Choose the A10 vThunder publisher that is right for you and your customers. A10 Thunder ADC for Advanced Load Balancing - BYOL is set as a default Publisher ID. Find more types of thunder images available with different capacities. Go to Azure Portal -> Marketplace -> Search for 'vThunder' -> Select Image -> Usage Information + Support -> Publisher ID. For more Thunder documentation, please refer to https://documentation.a10networks.com -> Infrastructure as Code (IAC) -> ARM Powershell."
         }
      },
      "Product":{
         "type":"string",
         "defaultValue": "a10-vthunder-adc-521",
         "metadata":{
            "description":"Choose the A10 vThunder product that is right for you and your customers. A10 Thunder ADC for Advanced Load Balancing - BYOL is set as a default Product ID. Find more types of thunder images available with different capacities. Go to Azure Portal -> Marketplace -> Search for 'vThunder' -> Select Image -> Usage Information + Support -> Product ID. For more Thunder documentation, please refer to https://documentation.a10networks.com -> Infrastructure as Code (IAC) -> ARM Powershell."
         }
      },
      "Instance Count":{
         "type":"int",
         "defaultValue":1,
         "minValue":1,
         "maxValue":100,
         "metadata":{
            "description":"Choose the number of instances to be created and managed in the deployment. For example, if you set the 'Instance Count' to 2, the ARM template will deploy two virtual machines with identical configurations in side the VMSS. This parameter is particularly useful for Virtual Machine Scale Sets (VMSS) and auto-scaling scenarios, allowing you to adjust the number of instances based on changing workload demands. The minimum allowed value is 1. For more information on VMSS and auto-scaling, refer to the Azure documentation: https://docs.microsoft.com/azure/virtual-machine-scale-sets/"
         }
      },
      "NIC Management":{
         "type":"string",
         "defaultValue": "vth-inst-mgmt-nic",
         "metadata":{
            "description":"Choose a unique network interface card for management traffic. This ARM template will create a new network interface card for virtual machine. For eg vth-inst-mgmt-nic"
         }
      },
      "Subnet Mgmt CIDR":{
         "type":"string",
         "defaultValue": "10.0.1.0/24",
         "metadata":{
            "description":"Choose the CIDR range for management subnet, For eg. 10.0.1.0/24"
         }
      },
      "Management Public IP Name":{
         "type":"string",
         "defaultValue": "vth-inst-mgmt-ip",
         "metadata":{
            "description":"Choose an unique public IP name for management traffic. This ARM template will create a new public IP address for virtual machine. For eg vth-inst-mgmt-ip"
         }
      },
      "NIC DataIn":{
         "type":"string",
         "defaultValue": "vth-inst-datain-nic",
         "metadata":{
            "description":"Choose a unique network interface card for datain traffic. This ARM template will create a new network interface card for virtual machine. For eg vth-inst-datain-nic"
         }
      },
      "Subnet DataIn CIDR":{
         "type":"string",
         "defaultValue": "10.0.2.0/24",
         "metadata":{
            "description":"Choose the CIDR range for data-in subnet, For eg. 10.0.2.0/24"
         }
      },
      "NIC DataOut":{
         "type":"string",
         "defaultValue": "vth-inst-dataout-nic",
         "metadata":{
            "description":"Choose a unique network interface card for dataout traffic. This ARM template will create a new network interface card for virtual machine. For eg vth-inst-dataout-nic"
         }
      },
      "Subnet DataOut CIDR":{
         "type":"string",
         "defaultValue": "10.0.3.0/24",
         "metadata":{
            "description":"Choose the CIDR range for data-out subnet. For eg. 10.0.3.0/24"
         }
      },
      "Network Security Group": {
         "type": "string",
         "defaultValue": "vth-vmss-nsg",
         "metadata": {
             "description": "Choose a unique network security group name for all the network interface card. This ARM template will create a new network security group for a virtual machine scale set. For eg vth-vmss-nsg."
         }
      },
      "Storage Account Name": {
         "type": "string",
         "defaultValue":"vthunderstorage",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "Choose a unique name for the azure storage account. The name must be lowercase, between 3 and 24 characters long, and can contain numbers and lowercase letters only. It will be used as part of the URL for accessing the data stored within the account. If no name is provided, the default value 'vthunderstorage' will be used, but it's essential to change it to a unique and meaningful name. Avoid using sensitive information in the storage account name. For more information on naming rules and considerations, refer to the azure documentation: https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules"
         }
      },
      "LB Name": {
         "type": "string",
         "defaultValue": "vth-lb",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "Choose a unique name for the azure load balancer. The name must be globally unique within the azure subscription and should be between 1 and 80 characters long. It can include numbers, lowercase letters, and hyphens, but cannot start or end with a hyphen. The Load Balancer name will be used to identify and access the load balancer and its associated resources. If no name is provided, the default value 'vth-lb' will be used. For more information on naming rules and considerations, refer to the Azure documentation: https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules"
         }
      },
      "LB Public IP Name": {
         "type": "string",
         "defaultValue": "vth-lb-ip",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
            "description": "Choose a unique public IP name for load balancer traffic. This ARM template will create a new public IP address for load balancer. For eg vth-lb-ip"
         }
      },
      "Automation Account Name": {
       "type": "string",
       "defaultValue": "vth-amt-acc",
       "minLength": 3,
       "maxLength": 61,
       "metadata": {
            "description": "Choose a unique name for the azure automation account. The name must be between 2 and 50 characters long, can contain numbers, lowercase letters, and hyphens, but cannot start or end with a hyphen. If no name is provided, the default value 'vth-amt-acc' will be used. An azure automation account is a central hub for automating and orchestrating tasks and processes within the azure environment and beyond. It provides a platform to create, monitor, and manage automation runbooks, which are scripts that can perform various tasks on azure resources and external systems. Automation runbooks can be scheduled to run at specific intervals or triggered by specific events, enabling proactive maintenance and resource management."
         }
     },
      "Log Analytics Workspace Name": {
         "type": "string",
         "defaultValue": "vth-vmss-log-workspace",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
              "description": "Choose a unique name for the azure log analytics workspace. The name must be between 2 and 64 characters long, can contain numbers, lowercase letters, and hyphens, but cannot start or end with a hyphen. If no name is provided, the default value 'vth-vmss-log-workspace' will be used. An azure log analytics workspace is a central repository for collecting, analyzing, and visualizing data from various sources. It allows you to ingest and store logs and monitoring data from Azure resources, on-premises servers, applications, and other cloud environments. Once data is collected in the workspace, you can perform queries, create custom dashboards, and set up alerts to gain valuable insights into the performance, health, and security of your infrastructure and applications."
           }
       },
      "Application Insights Name": {
         "type": "string",
         "defaultValue": "vth-vmss-app-insights",
         "minLength": 3,
         "maxLength": 61,
         "metadata": {
              "description": "Choose a unique name for the azure application insights resource. The name must be between 2 and 256 characters long, can contain numbers, lowercase letters, and hyphens, but cannot start or end with a hyphen. If no name is provided, the default value 'vth-vmss-app-insights' will be used. Azure application insights is a comprehensive application performance monitoring service that helps you gain insights into the availability, performance, and usage of your applications. It allows you to track and analyze telemetry data from vThunder. With application insights, you can detect and diagnose performance issues, identify trends, and optimize application performance to deliver better user experiences."
           }
       },
      "Enable Accelerated Networking": {
         "type": "bool",
         "defaultValue": false,
         "metadata": {
             "description": "Select true to enable accelerated networking to enable low latency and high throughput on the network interface. Choose the VM instance size that is compatible with accelerated networking. For more information on accelerated networking please refer to https://learn.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-cli?tabs=windows. For more information please refer to Thunder documentation https://documentation.a10networks.com -> Infrastructure as Code (IAC) -> ARM Powershell"
         }
     },
      "Enable IP Forwarding": {
         "type": "bool",
         "defaultValue": false,
         "metadata": {
             "description": "Select true to enabling IP forwarding to allows the virtual machine to forward network traffic between networks, greatly improving its networking performance. This high-performance path bypasses the host from the datapath, reducing latency, jitter, and CPU utilization, for use with the most demanding network workloads on supported VM types. For more information please refer https://learn.microsoft.com/en-us/azure/virtual-network/virtual-network-network-interface?tabs=azure-portal#enable-or-disable-ip-forwarding-for-a-network-interface . For more information please refer to Thunder documentation https://documentation.a10networks.com -> Infrastructure as Code (IAC) -> ARM Powershell"
         }
     }
   },
   "variables":{
      "namingInfix":"[toLower(parameters('VMSS Name'))]",
      "longNamingInfix":"[toLower(parameters('VMSS Name'))]",
      "adminUsername" : "vth-user",
      "adminPassword": "vth-Password",
      "location": "[resourceGroup().location]",
      "sslContainerName": "ssl",
      "addressPrefix":"10.0.0.0/16",
      "subnet1Prefix":"[parameters('Subnet Mgmt CIDR')]",
      "subnet2Prefix":"[parameters('Subnet DataIn CIDR')]",
      "subnet3Prefix":"[parameters('Subnet DataOut CIDR')]",
      "virtualNetworkName":"vth-vnet",
      "nic1PublicIPName":"[parameters('Management Public IP Name')]",
      "subnet1Name":"subnet-mgmt",
      "subnet2Name":"subnet-data-in",
      "subnet3Name":"subnet-data-out",
      "nic1Name":"[parameters('NIC Management')]",
      "nic2Name":"[parameters('NIC DataIn')]",
      "nic3Name":"[parameters('NIC DataOut')]",
      "ipConfig1Name":"[concat(variables('nic1Name'), '-ip')]",
      "ipConfig2Name":"[concat(variables('nic2Name'), '-ip')]",
      "ipConfig3Name":"[concat(variables('nic3Name'), '-ip')]",
      "domain1Name":"[concat(parameters('VMSS Name'), '-0-', substring(uniqueString(resourceGroup().name), 0, 6))]",
      "networkSecurityGroupName": "[parameters('Network Security Group')]",
      "storageAccountType": "Standard_GRS",
      "storageAccountName": "[toLower(parameters('Storage Account Name'))]",
      "platformFaultDomainCount": 1,
      "singlePlacementGroup": true,
      "lbPublicIPName": "[parameters('LB Public IP Name')]",
      "lbName": "[parameters('LB Name')]",
      "lbFrontendName":"vth-lb-frnt-ip",
      "lbBackEndPoolName":"vth-lb-bck-pool",
      "lbPublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',variables('lbPublicIPName'))]",
      "lbFrontendIPConfigID": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('lbName'), variables('lbFrontendName'))]",
      "lbBackendPoolID": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('lbName'), variables('lbBackEndPoolName'))]",
      "lbHealthProbe80Name": "HealthProbe80",
      "lbHealthProbe80ID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbHealthProbe80Name'))]",
      "lbHealthProbe443Name": "HealthProbe443",
      "lbHealthProbe443ID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbHealthProbe443Name'))]",
      "lbHealthProbe53Name": "HealthProbe53",
      "lbHealthProbe53ID": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('lbName'), variables('lbHealthProbe53Name'))]",
      "workspaceName":"[parameters('Log Analytics Workspace Name')]",
      "workspaceSku":"pergb2018",
      "appInsightsName":"[parameters('Application Insights Name')]",
      "_artifactsLocation":"https://raw.githubusercontent.com/a10networks/A10-azure-arm-templates/release/v1.2.0/ARM-TEMPLATES/A10-vThunder_ADC-3NIC-VMSS/ARM_TMPL_3NIC_NVM_VMSS_1.json",
      "_artifactsLocationSasToken": "",
      "PSMasterRunbookDescription": "Runbook to run all runbook",
      "PSSLBConfigRunbookDescription": "Runbook to apply slb config for all vThunder",
      "PSSSLConfigRunbookDescription": "Runbook to apply ssl certificate for all vThunder",
      "PSGLMConfigRunbookDescription": "Runbook to glm config for all vThunder",
      "PSGLMRevokeConfigRunbookDescription": "Runbook to revoke glm for deleted vThunder",
      "PSChangePasswordConfigRunbookDescription": "Runbook to change password for all vThunder"
   },
   "resources":[
      {
         "apiVersion": "2017-03-15-preview",
         "name": "[variables('workspaceName')]",
         "location": "[variables('location')]",
         "type": "Microsoft.OperationalInsights/workspaces",
         "properties": {
             "sku": {
                 "name": "[variables('workspaceSku')]"
             }
         }
      },
      {
            "name": "[variables('appInsightsName')]",
            "type": "microsoft.insights/components",
            "location": "[variables('location')]",
            "apiVersion": "2020-02-02-preview",
            "dependsOn": [
               "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
            ],
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaAIExtension",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
            }
      },
      {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-06-01",
            "name": "[variables('lbPublicIPName')]",
            "location": "[variables('location')]",
            "sku": {
               "name": "Standard",
               "tier": "Regional"
            },
            "zones": ["1"],
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
      {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-06-01",
            "name": "[variables('lbName')]",
            "location": "[variables('location')]",
            "sku": {
               "name": "Standard",
               "tier": "Regional"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbPublicIPName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbFrontendName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('lbPublicIPAddressID')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbBackEndPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "rulePort80",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBackendPoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHealthProbe80ID')]"
                            }
                        }
                    },
                   {
                        "name": "rulePort443",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBackendPoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHealthProbe443ID')]"
                            }
                        }
                    },
                   {
                        "name": "rulePort53",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('lbFrontendIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('lbBackendPoolID')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 53,
                            "backendPort": 53,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[variables('lbHealthProbe53ID')]"
                            }
                        }
                    }
                ],
                "probes": [
                   {
                      "name": "[variables('lbHealthProbe80Name')]",
                      "properties": {
                         "protocol": "Tcp",
                         "port": 80,
                         "intervalInSeconds": 5,
                         "numberOfProbes": 2
                      }
                   },
                   {
                      "name": "[variables('lbHealthProbe443Name')]",
                      "properties": {
                         "protocol": "Tcp",
                         "port": 443,
                         "intervalInSeconds": 5,
                         "numberOfProbes": 2
                      }
                   },
                   {
                      "name": "[variables('lbHealthProbe53Name')]",
                      "properties": {
                         "protocol": "Tcp",
                         "port": 53,
                         "intervalInSeconds": 5,
                         "numberOfProbes": 2
                      }
                   }
                ]
            }
        },
      {
         "type":"Microsoft.Network/networkSecurityGroups",
         "apiVersion":"2015-06-15",
         "name":"[variables('networkSecurityGroupName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"ssh",
                  "properties":{
                     "description":"ssh-rule",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"0.0.0.0/0",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1000,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"https",
                  "properties":{
                     "description":"https-rule",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"443",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1010,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"http",
                  "properties":{
                     "description":"http-rule",
                     "protocol":"Tcp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"80",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1020,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"snmp",
                  "properties":{
                     "description":"snmp-rule",
                     "protocol":"Udp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"161",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1030,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"ping",
                  "properties":{
                     "description":"ping-rule",
                     "protocol":"Icmp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"*",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1040,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               },
               {
                  "name":"ntp",
                  "properties":{
                     "description":"ntp-rule",
                     "protocol":"Udp",
                     "sourcePortRange":"*",
                     "destinationPortRange":"123",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":1050,
                     "direction":"Inbound",
                     "sourcePortRanges":[],
                     "destinationPortRanges":[],
                     "sourceAddressPrefixes":[],
                     "destinationAddressPrefixes":[]
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/virtualNetworks",
         "apiVersion":"2020-06-01",
         "name":"[variables('virtualNetworkName')]",
         "location":"[variables('location')]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('addressPrefix')]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('subnet1Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet1Prefix')]"
                  }
               },
               {
                  "name":"[variables('subnet2Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet2Prefix')]"
                  }
               },
               {
                  "name":"[variables('subnet3Name')]",
                  "properties":{
                     "addressPrefix":"[variables('subnet3Prefix')]"
                  }
               }
            ]
         },
         "dependsOn":[
            "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
         ]
      },
      {
         "type":"Microsoft.Compute/virtualMachineScaleSets",
         "apiVersion":"2020-06-01",
         "name":"[variables('namingInfix')]",
         "location":"[variables('location')]",
         "sku":{
            "name":"[parameters('VMSS Size')]",
            "tier":"Standard",
            "capacity":"[parameters('Instance Count')]"
         },
         "plan":{
            "name":"[parameters('Image')]",
            "product":"[parameters('Product')]",
            "publisher":"[parameters('Publisher')]"
         },
         "dependsOn":[
            "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
         ],
         "properties":{
            "overprovision":false,
            "upgradePolicy":{
               "mode":"Automatic"
            },
            "singlePlacementGroup":"[variables('singlePlacementGroup')]",
            "platformFaultDomainCount":"[variables('platformFaultDomainCount')]",
            "virtualMachineProfile":{
               "storageProfile":{
                  "osDisk":{
                     "osType":"Linux",
                     "createOption":"FromImage",
                     "caching":"ReadWrite",
                     "managedDisk":{
                        "storageAccountType":"Standard_LRS"
                     },
                     "diskSizeGB":30
                  },
                  "imageReference":{
                     "publisher":"[parameters('Publisher')]",
                     "offer":"[parameters('Product')]",
                     "sku":"[parameters('Image')]",
                     "version":"latest"
                  }
               },
               "osProfile":{
                  "computerNamePrefix":"[variables('namingInfix')]",
                  "adminUsername":"[variables('adminUsername')]",
                  "adminPassword":"[variables('adminPassword')]"
               },
               "networkProfile":{
                  "networkInterfaceConfigurations":[
                     {
                        "name":"[variables('nic1Name')]",
                        "properties":{
                           "primary":true,
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfig1Name')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]"
                                    },
                                    "publicipaddressconfiguration":{
                                       "name":"[variables('nic1PublicIPName')]",
                                       "properties":{
                                          "dnsSettings":{
                                             "domainNameLabel":"[variables('domain1Name')]"
                                          },
                                          "idleTimeoutInMinutes":15
                                       }
                                    }
                                 }
                              }
                           ],
                           "networkSecurityGroup":{
                              "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                           }
                        }
                     },
                     {
                        "name":"[variables('nic2Name')]",
                        "properties":{
                           "primary":false,
                           "enableAcceleratedNetworking": "[parameters('Enable Accelerated Networking')]",
                           "enableIPForwarding": "[parameters('Enable IP Forwarding')]",
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfig2Name')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]"
                                    },
                                    "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[variables('lbBackendPoolID')]"
                                                    }
                                                ]
                                 }
                              }
                           ],
                           "networkSecurityGroup":{
                              "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                           }
                        }
                     },
                     {
                        "name":"[variables('nic3Name')]",
                        "properties":{
                           "primary":false,
                           "enableAcceleratedNetworking": "[parameters('Enable Accelerated Networking')]",
                           "enableIPForwarding": "[parameters('Enable IP Forwarding')]",
                           "ipConfigurations":[
                              {
                                 "name":"[variables('ipConfig3Name')]",
                                 "properties":{
                                    "subnet":{
                                       "id":"[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet3Name'))]"
                                    }
                                 }
                              }
                           ],
                           "networkSecurityGroup":{
                              "id":"[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]"
                           }
                        }
                     }
                  ]
               }
            }
         }
      },
      {
         "type": "Microsoft.Storage/storageAccounts",
         "apiVersion": "2019-04-01",
         "name": "[variables('storageAccountName')]",
         "location": "[resourceGroup().location]",
         "sku": {
           "name": "[variables('storageAccountType')]"
         },
         "kind": "StorageV2",
         "properties": {}
      },
      {
      "name": "[concat(variables('storageAccountName'),'/default/', variables('sslContainerName'))]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2018-07-01",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
         ]
      },
      {
       "type": "Microsoft.Automation/automationAccounts",
       "apiVersion": "2020-01-13-preview",
       "name": "[parameters('Automation Account Name')]",
       "location": "[variables('location')]",
       "dependsOn": [
         "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
       ],
       "identity": {
         "type": "SystemAssigned"
       },
       "properties": {
         "sku": {
           "name": "Basic"
         }
       },
       "resources": [
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "Master-Runbook",
           "location": "[variables('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('Automation Account Name'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSMasterRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_MASTER_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "SLB-Config",
           "location": "[variables('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('Automation Account Name'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSSLBConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_SLB_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "SSL-Config",
           "location": "[variables('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('Automation Account Name'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSSSLConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_SSL_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "GLM-Config",
           "location": "[variables('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('Automation Account Name'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSGLMConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_GLM_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "GLM-Revoke-Config",
           "location": "[variables('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('Automation Account Name'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSGLMRevokeConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_GLM_REVOKE_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         },
         {
           "type": "runbooks",
           "apiVersion": "2020-01-13-preview",
           "name": "Change-Password-Config",
           "location": "[variables('location')]",
           "dependsOn": [
             "[resourceId('Microsoft.Automation/automationAccounts', parameters('Automation Account Name'))]"
           ],
           "properties": {
             "runbookType": "PowerShell",
             "logProgress": "false",
             "logVerbose": "false",
             "description": "[variables('PSChangePasswordConfigRunbookDescription')]",
             "publishContentLink": {
               "uri": "[uri(variables('_artifactsLocation'), concat('ARM_TMPL_3NIC_NVM_VMSS_CHANGE_PASSWORD_RUNBOOK.ps1', variables('_artifactsLocationSasToken')))]",
               "version": "1.0.0.0"
             }
           }
         }
       ]
     }
   ]
}